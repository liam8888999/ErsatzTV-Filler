name: Build Packages on Push

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            ext: ""
          - os: macos-latest
            target: macos
            ext: ""
          - os: windows-latest
            target: win
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest Git tag
        id: get_tag
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0 --always)
          echo "TAG=${tag}" >> $GITHUB_ENV
          echo ${tag}

      - name: Set VERSION variable
        shell: bash
        run: |
          tag="${TAG:-none}"
          if [[ "$tag" == "none" ]]; then
            tag="${{ github.sha }}"
          fi
          echo "VERSION=${tag#V}" >> $GITHUB_ENV

      - name: Show version
        run: echo "Version is ${{ env.VERSION }}"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.16.0

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: Install pkg
        run: npm install -g @yao-pkg/pkg

      - name: Build binary with pkg
        run: pkg package.json --targets node22-${{ matrix.target }} --output ersatztv-filler-${{ matrix.target }}${{ matrix.ext }}

      - name: Create zip
        shell: bash
        run: |
          mkdir builds
          7z e builds/ersatztv-filler-${{ matrix.target }}-${{ env.VERSION }}.zip ersatztv-filler-${{ matrix.target }}${{ matrix.ext }} README.md Changelog.md -r

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ersatztv-filler-${{ matrix.target }}-${{ env.VERSION }}.zip
          path: builds/ersatztv-filler-${{ matrix.target }}-${{ env.VERSION }}.zip
