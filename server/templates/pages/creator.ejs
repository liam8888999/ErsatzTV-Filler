<!DOCTYPE html>
<html>
<head>
  <style>
  .collapsible {
  cursor: pointer;
  border: none;
  text-align: center;
  outline: none;
  width: 50%;
  margin-bottom: 10px;
}

.content {
  padding: 0 18px;
  display: none;
  overflow: hidden;
}

body {
          justify-content: center;
          align-items: center;
          height: 100vh;
            margin: 0 auto;
}

form {
  max-width: 50%;
  margin: auto;
  width: 50%;
}

h2 {
  align: left;
}

label {
  width: 49%;
  padding-bottom: 15px;
  align: left;
}

    input[type="text"],
    input[type="color"],
    input[type="checkbox"] {
        padding: 1px;
        border: 1px solid #ccc;
    }

    input[type="text"] {
      width: 50%;
    }

    input[type="color"] {
      width: 20%;
    }

    input[type="submit"] {
      width: 100%;
    }

</style>
    <title>Theme Creator</title>
</head>
<body>
  <center>
  <u>  <h1>Theme Creator</h1></u>
  <br>
  </center>
    <form action="/themecreator" method="POST">
    <u> <b> <h5>General Options</h5></b></u>
        <label for="themeName">Theme Name:</label>
        <input type="text" id="themeName" name="themeName" required><br>
        <label for="creator">Creator:</label>
        <input type="text" id="creator" name="creator" required><br>
<br>
      <b> <u> <h5>Offline Theme Options</h5></u> </b>
        <label for="offlineTextColour">Offline Text Colour:</label>
        <input type="color" id="offlineTextColour" name="offlineTextColour" required><br>
        <label for="offlineTitleColour">Offline Title Colour:</label>
        <input type="color" id="offlineTitleColour" name="offlineTitleColour" required><br>
        <label for="offlineBackgroundColour">Offline Background Colour:</label>
        <input type="color" id="offlineBackgroundColour" name="offlineBackgroundColour" required><br>

<center><button type="button" class="collapsible">Show Preview ▾</button>
<div class="content">
<div id="Channel-Offline-Background" style="border: 2px solid; width:50%; margin:auto; background-color:black;">
  <center>
    <p id="coloredofflineTitle" style="color:black; padding-top:15px;">This Channel is Currently offline</p>
  </center>
    <p id="coloredofflineText" style="color:black; width:75%; margin:auto;">    Next showing at:</p>
    <p id="coloredofflineText" style="color:black; width:75%; margin:auto;">    Starting with:</p>
</div>
</div></center>
<br>
      <u><b>  <h5>News Theme Options</h5></b></u>
        <label for="newsTextColour">News Text Colour:</label>
        <input type="color" id="newsTextColour" name="newsTextColour" required><br>
        <label for="newsTitleColour">News Title Colour:</label>
        <input type="color" id="newsTitleColour" name="newsTitleColour" required><br>
        <label for="newsBackgroundColour">News Background Colour:</label>
        <input type="color" id="newsBackgroundColour" name="newsBackgroundColour" required><br>
<center><button type="button" class="collapsible">Show Preview ▾</button>
<div class="content">
<div id="news-Background" style="border: 2px solid; width:50%; margin:auto; background-color:black;">
  <center>
    <p id="colorednewsTitle" style="color:black; padding-top:15px;">News Title</p>
  </center>
    <p id="colorednewsText" style="color:black; width:75%; margin:auto;">This is a breaking news story. The news story is extremely important and cant be missed in this template.</p>
</div>
</div></center>
<br>
      <u><b>  <h5>Weather Theme Options</h5></b></u>
        <label for="weatherBackgroundColour">Weather Background Colour:</label>
        <input type="color" id="weatherBackgroundColour" name="weatherBackgroundColour" required><br>
        <label for="weatherimageBackgroundColour">Weather Image Background Colour:</label>
        <input type="color" id="weatherimageBackgroundColour" name="weatherimageBackgroundColour" required><br>
        <label for="weatherimagetextColour">Weather Text Colour:</label>
        <input type="color" id="weatherimagetextColour" name="weatherimagetextColour" required><br>
        <br>
      <u><b>  <h5>Channel Logo Theme Options</h5></b></u>
        <label for="channellogoBackgroundColour">Channel Logo Background Colour:</label>
        <input type="color" id="channellogoBackgroundColour" name="channellogoBackgroundColour" required><br>
<br>
        <u><b><h5>Add to the themes store for other users</h5></b></u>
        <label for="sendToWebhook">Add to the themes store:</label>
        <input type="checkbox" id="sendToWebhook" name="sendToWebhook" checked><br>

        <input type="submit" value="Save Theme">
    </form>
    <br>
<script>
    // Get references to the color picker and text element
    const offlineTitle = document.getElementById('offlineTitleColour');
    const coloredofflineTitle = document.getElementById('coloredofflineTitle');

    // Add an event listener to the color picker
    offlineTitle.addEventListener('input', function () {
        // Get the selected color value
        const offlinetitlecolour = offlineTitle.value;

        // Apply the selected color as the text color
        coloredofflineTitle.style.color = offlinetitlecolour;
    });
    // Get references to the color picker and text element
    const offlineText = document.getElementById('offlineTextColour');
    const coloredofflineText = document.getElementById('coloredofflineText');

    // Add an event listener to the color picker
    offlineText.addEventListener('input', function () {
        // Get the selected color value
        const offlinetextcolour = offlineText.value;

        // Apply the selected color as the text color
        coloredofflineText.style.color = offlinetextcolour;
    });
    // Get references to the color picker and text element
    const offlinebackground = document.getElementById('offlineBackgroundColour');
    const coloredofflinebackground = document.getElementById('Channel-Offline-Background');

    // Add an event listener to the color picker
    offlinebackground.addEventListener('input', function () {
        // Get the selected color value
        const offlinebackgroundcolour = offlinebackground.value;

        // Apply the selected color as the text color
        coloredofflinebackground.style.backgroundColor = offlinebackgroundcolour;
    });
</script>
<script>
    // Get references to the color picker and text element
    const newsTitle = document.getElementById('newsTitleColour');
    const colorednewsTitle = document.getElementById('colorednewsTitle');

    // Add an event listener to the color picker
    newsTitle.addEventListener('input', function () {
        // Get the selected color value
        const newstitlecolour = newsTitle.value;

        // Apply the selected color as the text color
        colorednewsTitle.style.color = newstitlecolour;
    });
    // Get references to the color picker and text element
    const newsText = document.getElementById('newsTextColour');
    const colorednewsText = document.getElementById('colorednewsText');

    // Add an event listener to the color picker
    newsText.addEventListener('input', function () {
        // Get the selected color value
        const newstextcolour = newsText.value;

        // Apply the selected color as the text color
        colorednewsText.style.color = newstextcolour;
    });
    // Get references to the color picker and text element
    const newsbackground = document.getElementById('newsBackgroundColour');
    const colorednewsbackground = document.getElementById('news-Background');

    // Add an event listener to the color picker
    newsbackground.addEventListener('input', function () {
        // Get the selected color value
        const newsbackgroundcolour = newsbackground.value;

        // Apply the selected color as the text color
        colorednewsbackground.style.backgroundColor = newsbackgroundcolour;
    });
</script>
<script>
var coll = document.getElementsByClassName("collapsible");
var i;

for (i = 0; i < coll.length; i++) {
  coll[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var content = this.nextElementSibling;
    if (content.style.display === "block") {
      content.style.display = "none";
    } else {
      content.style.display = "block";
    }
  });
}
</script>

</body>
</html>
